const MaxV = 9;
type TValues = array [0..MaxV] of integer;

procedure dichoD (var Values : TValues; x :integer);
var
  Valc, d, f, j, i, inter: integer;
begin
  Valc := Values[x];
  d := x+1;
  f := MaxV;
  j := (d + f) div 2;
  while (f-d) > 1 do begin
    if Valc >= Values[j] then f := j else d := j;
    j := (d + f) div 2;
  end;
  if (f-d) = 1 then begin
    if Valc <= Values[f] then d := f else
      if Valc > Values[d] then d := x;
  end else
    if Valc < Values[j] then d := f else
      if Valc < Values[d] then d := x - 1;
  if Valc <= Values[d] then begin
    for i := x to d-1 do begin
      inter := values[i+1];
      values[i+1] := values[i];
      values[i] := inter;
    end;
    values[d] := Valc;
  end;
end ;

procedure sortD (var Values : TValues);
var
  inter, i : integer;
begin
  for i := MaxV-1 downto 0 do dichoD(Values, i);
end;
